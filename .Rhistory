}
# Determine if it is leg day
if (lifting$Muscle[i + 1] == "Legs" | lifting$Muscle[i + 1] == "Shoulders") {
lifting$temp[i + 1] <- 'legs'
}
# If the muscle group is not the same as the day before, augment the day
if (lifting$temp[i + 1] != lifting$temp[i]) {
lifting$Day[i + 1] <- lifting$Day[i] + 1
}
}
lifting$temp[1] <- 'push'
# Do the first row
head(lifting)
# First for Day (Loop through the dataset)
for (i in 1:nrow(lifting) - 1) {
# Determine if it is push day
if (lifting$Muscle[i + 1] == "Chest" | lifting$Muscle[i + 1] == "Triceps") {
lifting$temp[i + 1] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 1] == "Biceps" | lifting$Muscle[i + 1] == "Back") {
lifting$temp[i + 1] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 1] == "Legs" | lifting$Muscle[i + 1] == "Shoulders") {
lifting$temp[i + 1] <- 'legs'
}
# If the muscle group is not the same as the day before, augment the day
if (lifting$temp[i + 1] != lifting$temp[i]) {
lifting$Day[i + 1] <- lifting$Day[i] + 1
}
}
# Do the first row
head(lifting)
lifting$temp <- 'push'
# Do the first row
head(lifting)
# First for Day (Loop through the dataset)
for (i in 1:nrow(lifting) - 1) {
# Determine if it is push day
if (lifting$Muscle[i + 1] == "Chest" | lifting$Muscle[i + 1] == "Triceps") {
lifting$temp[i + 1] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 1] == "Biceps" | lifting$Muscle[i + 1] == "Back") {
lifting$temp[i + 1] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 1] == "Legs" | lifting$Muscle[i + 1] == "Shoulders") {
lifting$temp[i + 1] <- 'legs'
}
# If the muscle group is not the same as the day before, augment the day
if (lifting$temp[i + 1] != lifting$temp[i]) {
lifting$Day[i + 1] <- lifting$Day[i] + 1
}
}
lifting$temp[2]
# Do the first row
head(lifting)
lifting$Day
lifting$temp
# First for Day (Loop through the dataset)
for (i in 1:nrow(lifting) - 1) {
# Determine if it is push day
if (lifting$Muscle[i + 1] == "Chest" | lifting$Muscle[i + 1] == "Triceps") {
lifting$temp[i + 1] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 1] == "Biceps" | lifting$Muscle[i + 1] == "Back") {
lifting$temp[i + 1] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 1] == "Legs" | lifting$Muscle[i + 1] == "Shoulders") {
lifting$temp[i + 1] <- 'legs'
}
# If the muscle group is not the same as the day before, augment the day
if (lifting$temp[i + 1] != lifting$temp[i]) {
lifting$Day[i + 1] <- lifting$Day[i] + 1
# Else the day stays the same
} else {
lifting$Day[i + 1] <- lifting$Day[i]
}
}
lifting$temp[2] <- 'pull'
lifting$temp
lifting$Day
# If
lifting$temp[2]
# Does not equal
lifting$temp[1]
# Then
lifting$Day[2]
# Equals
lifting$Day[1]
# Equals
lifting$Day[1] + 1
if (lifting$temp[2] != lifting$temp[1]) {
lifting$Day[2] <- lifting$Day[1] + 1
}
#Check
lifting$Day[2]
#
for (i in 1:nrow(lifting) - 1) {
print(i)
}
lifting$Day[0]
lifting$Muscle[0]
# First for Day (Loop through the dataset)
for (i in 1:nrow(lifting) - 1) {
# Determine if it is push day
if (lifting$Muscle[i + 2] == "Chest" | lifting$Muscle[i + 2] == "Triceps") {
lifting$temp[i + 2] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 2] == "Biceps" | lifting$Muscle[i + 2] == "Back") {
lifting$temp[i + 2] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 2] == "Legs" | lifting$Muscle[i + 2] == "Shoulders") {
lifting$temp[i + 2] <- 'legs'
}
# If the muscle group is not the same as the day before, augment the day
if (lifting$temp[i + 2] != lifting$temp[i + 1]) {
lifting$Day[i + 2] <- lifting$Day[i + 1] + 1
# Else the day stays the same
} else {
lifting$Day[i + 2] <- lifting$Day[i + 1]
}
}
head(lifting)
#
for (i in 1:nrow(lifting) - 1) {
print(i)
}
#
for (i + 1 in 1:nrow(lifting) - 1) {
print(i)
}
#
for (i + 1 in 1:nrow(lifting) - 1) {
print(i)
}
#
for ((i + 1) in 1:nrow(lifting) - 1) {
print(i)
}
#
for (i + 1 in 1:nrow(lifting) - 1) {
print(i)
}
#
for (i in 1:nrow(lifting) - 1) {
print(i)
}
lifting[0]
lifting[1]
lifting$day[1]
lifting$Day[1]
lifting$Day
lifting$Day[1]
lifting[1]
lifting[, 1]
lifting[1, ]
head(lifting)
# Load in the data and make sure it is working properly
lifting <- read.csv('Lifting.csv', header = TRUE)
# Create new columns
lifting$Day <- 0
# Fix our Days
table(lifting$Muscle)
# Loop through dataset
for (i in 1:nrow(lifting)) {
# If the muscle equals Bicep
if (lifting$Muscle[i] == 'Bicep') {
# Change it to "Biceps
lifting$Muscle[i] <- 'Biceps'
}
}
# Check to make sure it worked (Yay)
table(lifting$Muscle)
# Create a temporary column to keep track
lifting$temp <- ''
# Do the first row
head(lifting)
lifting$Day[1] <- 1
lifting$temp[1] <- 'push'
head(lifting)
# Test out just this portion
for (i in 1:nrow(lifting) - 1) {
# Determine if it is push day
if (lifting$Muscle[i + 2] == "Chest" | lifting$Muscle[i + 2] == "Triceps") {
lifting$temp[i + 2] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 2] == "Biceps" | lifting$Muscle[i + 2] == "Back") {
lifting$temp[i + 2] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 2] == "Legs" | lifting$Muscle[i + 2] == "Shoulders") {
lifting$temp[i + 2] <- 'legs'
}
}
lifting$Muscle[2]
sum(is.na(lifting$Muscle))
is.na(lifting$Muscle)
# Test out just this portion
for (i in 1:nrow(lifting) - 1) {
# Determine if it is push day
if (lifting$Muscle[i + 2] == "Chest" | lifting$Muscle[i + 2] == "Triceps") {
lifting$temp[i + 2] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 2] == "Biceps" | lifting$Muscle[i + 2] == "Back") {
lifting$temp[i + 2] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 2] == "Legs" | lifting$Muscle[i + 2] == "Shoulders") {
lifting$temp[i + 2] <- 'legs'
}
}
head(lifting)
tail(lifting)
tail(lifting, n = 50)
# Load in the data and make sure it is working properly
lifting <- read.csv('Lifting.csv', header = TRUE)
# Create new columns
lifting$Day <- 0
# Loop through dataset
for (i in 1:nrow(lifting)) {
# If the muscle equals Bicep
if (lifting$Muscle[i] == 'Bicep') {
# Change it to "Biceps
lifting$Muscle[i] <- 'Biceps'
}
}
# Create a temporary column to keep track
lifting$temp <- ''
# Do the first row
head(lifting)
lifting$Day[1] <- 1
lifting$temp[1] <- 'push'
head(lifting)
# Test out just this portion
for (i in 1:nrow(lifting)) {
# Determine if it is push day
if (lifting$Muscle[i + 2] == "Chest" | lifting$Muscle[i + 2] == "Triceps") {
lifting$temp[i + 2] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 2] == "Biceps" | lifting$Muscle[i + 2] == "Back") {
lifting$temp[i + 2] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 2] == "Legs" | lifting$Muscle[i + 2] == "Shoulders") {
lifting$temp[i + 2] <- 'legs'
}
}
head(lifting)
# Load in the data and make sure it is working properly
lifting <- read.csv('Lifting.csv', header = TRUE)
head(lifting)
# Create new columns
lifting$Day <- 0
# Loop through dataset
for (i in 1:nrow(lifting)) {
# If the muscle equals Bicep
if (lifting$Muscle[i] == 'Bicep') {
# Change it to "Biceps
lifting$Muscle[i] <- 'Biceps'
}
}
# Create a temporary column to keep track
lifting$temp <- ''
# Do the first row
head(lifting)
lifting$Day[1] <- 1
lifting$temp[1] <- 'push'
head(lifting)
# Test out just this portion
for (i in 1:nrow(lifting)) {
# Determine if it is push day
if (lifting$Muscle[i + 1] == "Chest" | lifting$Muscle[i + 1] == "Triceps") {
lifting$temp[i + 1] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 1] == "Biceps" | lifting$Muscle[i + 1] == "Back") {
lifting$temp[i + 1] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 1] == "Legs" | lifting$Muscle[i + 1] == "Shoulders") {
lifting$temp[i + 1] <- 'legs'
}
}
head(lifting)
# Test out just this portion
lifting <- read.csv('Lifting.csv', header = TRUE)
lifting$Day <- 0
for (i in 1:nrow(lifting)) {
if (lifting$Muscle[i] == 'Bicep') {
lifting$Muscle[i] <- 'Biceps'
}
}
lifting$temp <- ''
lifting$Day[1] <- 1
lifting$temp[1] <- 'push'
head(lifting)
for (i in 1:nrow(lifting)) {
if (i == nrow(lifting)) {
break
}
# Determine if it is push day
if (lifting$Muscle[i + 1] == "Chest" | lifting$Muscle[i + 1] == "Triceps") {
lifting$temp[i + 1] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 1] == "Biceps" | lifting$Muscle[i + 1] == "Back") {
lifting$temp[i + 1] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 1] == "Legs" | lifting$Muscle[i + 1] == "Shoulders") {
lifting$temp[i + 1] <- 'legs'
}
}
head(lifting)
tail(lifting)
lifting <- read.csv('Lifting.csv', header = TRUE)
lifting$Day <- 0
for (i in 1:nrow(lifting)) {
if (lifting$Muscle[i] == 'Bicep') {
lifting$Muscle[i] <- 'Biceps'
}
}
lifting$temp <- ''
lifting$Day[1] <- 1
lifting$temp[1] <- 'push'
head(lifting)
# First for Day (Loop through the dataset)
for (i in 1:nrow(lifting)) {
# If it is the last row, break out of the loop
if (i == nrow(lifting)) {
break
}
# Determine if it is push day
if (lifting$Muscle[i + 1] == "Chest" | lifting$Muscle[i + 1] == "Triceps") {
lifting$temp[i + 1] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 1] == "Biceps" | lifting$Muscle[i + 1] == "Back") {
lifting$temp[i + 1] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 1] == "Legs" | lifting$Muscle[i + 1] == "Shoulders") {
lifting$temp[i + 1] <- 'legs'
}
# If the muscle group is not the same as the day before, augment the day
if (lifting$temp[i + 1] != lifting$temp[i]) {
lifting$Day[i + 1] <- lifting$Day[i] + 1
# Else the day stays the same
} else {
lifting$Day[i + 1] <- lifting$Day[i]
}
}
head(lifting)
tail(lifting)
# Remove the temporary column
lifting %>%
select(-temp) - > lifting
# Remove the temporary column
lifting %>%
select(-temp) -> lifting
# Make sure it worked
lifting %>%
select(Muscle, Day) %>%
head(n = 200)
# Make sure it worked
lifting %>%
select(Muscle, Day) %>%
head(n = 244)
# Fix our Days
table(lifting$Muscle)
head(lifting)
table(lifting$Exercise)
unique(lifting$Exercise)
nrow(unique(lifting$Exercise))
length(unique(lifting$Exercise))
# Do the first row
head(lifting)
# Do the first row
lifting$Set <- 0
head(lifting)
lifting$Set[1] <- 1
lifting$temp <- ''
lifting$temp[1] <- 'same'
head(lifting)
head(lifting)
# Loop through the entire dataset
for (i in 1:nrow(lifting)) {
# If it's the last row break
if (i == nrow(lifting)) {
break
}
# If the next value is same as the current value, augment the set
if (lifting$Exercise[i + 1] == lifting$Exercise[i]) {
lifting$Set[i + 1] <- lifting$Set[i] + 1
}
# Otherwise it is a new set
else {
lifting$Set[i + 1] <- 1
}
}
head(lifting)
lifting %>%
select(-temp) -> lifting
head(lifting)
head(lifting, n = 25)
table(lifting$Set)
table(lifting$Set)
remove(day)
remove(test)
# Load in the data and make sure it is working properly
lifting <- read.csv('Lifting.csv', header = TRUE)
head(lifting)
# Fix our Days
table(lifting$Muscle)
# Loop through dataset
for (i in 1:nrow(lifting)) {
# If the muscle equals Bicep
if (lifting$Muscle[i] == 'Bicep') {
# Change it to "Biceps
lifting$Muscle[i] <- 'Biceps'
}
}
# Check to make sure it worked (Yay)
table(lifting$Muscle)
# Create day column and a temporary column to keep track
lifting$Day <- 0
lifting$temp <- ''
# Do the first row
lifting$Day[1] <- 1
lifting$temp[1] <- 'push'
# First for Day (Loop through the dataset)
for (i in 1:nrow(lifting)) {
# If it is the last row, break out of the loop
if (i == nrow(lifting)) {
break
}
# Determine if it is push day
if (lifting$Muscle[i + 1] == "Chest" | lifting$Muscle[i + 1] == "Triceps") {
lifting$temp[i + 1] <- 'push'
}
# Determine if it is pull day
if (lifting$Muscle[i + 1] == "Biceps" | lifting$Muscle[i + 1] == "Back") {
lifting$temp[i + 1] <- 'pull'
}
# Determine if it is leg day
if (lifting$Muscle[i + 1] == "Legs" | lifting$Muscle[i + 1] == "Shoulders") {
lifting$temp[i + 1] <- 'legs'
}
# If the muscle group is not the same as the day before, augment the day
if (lifting$temp[i + 1] != lifting$temp[i]) {
lifting$Day[i + 1] <- lifting$Day[i] + 1
# Else the day stays the same
} else {
lifting$Day[i + 1] <- lifting$Day[i]
}
}
# Remove the temporary column
lifting %>%
select(-temp) -> lifting
# Make sure it worked
lifting %>%
select(Muscle, Day) %>%
head(n = 244)
# Let's do the same thing for Set
length(unique(lifting$Exercise))
# Do the first row
lifting$Set <- 0
lifting$Set[1] <- 1
head(lifting)
# Loop through the entire dataset
for (i in 1:nrow(lifting)) {
# If it's the last row break
if (i == nrow(lifting)) {
break
}
# If the next value is same as the current value, augment the set
if (lifting$Exercise[i + 1] == lifting$Exercise[i]) {
lifting$Set[i + 1] <- lifting$Set[i] + 1
}
# Otherwise it is a new set
else {
lifting$Set[i + 1] <- 1
}
}
# Check it worked and how my sets usually go
head(lifting, n = 25)
table(lifting$Set)
# Create the new "newLift" column
lifting$NewLift <- ''
head(lifting)
# Create the new "newLift" column
lifting$NewLift <- 1
head(lifting)
lifting %>%
select(-NewLift) -> lifting
# Create the new "newLift" column
lifting$NewLift <- 1
head(lifting)
lifting %>%
select(-NewLift) -> lifting
lifting$NewLift[1] <- 1
lifting
